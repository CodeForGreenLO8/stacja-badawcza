c	Session.vim	/^nnoremap c :Commands$/;"	m
f	Session.vim	/^nnoremap f :Files$/;"	m
h	Session.vim	/^nnoremap h :Helptags$/;"	m
l	Session.vim	/^nnoremap l :Lines$/;"	m
m	Session.vim	/^nnoremap m :Marks$/;"	m
t	Session.vim	/^nnoremap t :Tags$/;"	m
S	Session.vim	/^imap S <Plug>ISurround$/;"	m
s	Session.vim	/^imap s <Plug>Isurround$/;"	m
	Session.vim	/^inoremap <buffer> <silent>  =AutoPairsDelete()$/;"	m
	Session.vim	/^nnoremap  h$/;"	m
		Session.vim	/^inoremap <expr> 	 pumvisible() ? "\\" : "\\	"$/;"	m
	Session.vim	/^inoremap <buffer> <silent>   =AutoPairsSpace()$/;"	m
	Session.vim	/^nnoremap  k$/;"	m
	Session.vim	/^nnoremap  l$/;"	m
	Session.vim	/^nnoremap <silent>  :call multiple_cursors#new("n", 1)$/;"	m
	Session.vim	/^imap  <Plug>Isurround$/;"	m
h	Session.vim	/^nnoremap h :set nosplitright$/;"	m
j	Session.vim	/^nnoremap j :set splitbelow$/;"	m
k	Session.vim	/^nnoremap k :set nosplitbelow$/;"	m
l	Session.vim	/^nnoremap l :set splitright$/;"	m
,	Session.vim	/^nnoremap , :Tabular\/,\/l0r1$/;"	m
;	Session.vim	/^nnoremap ; :Tabular\/;\/l0r1$/;"	m
=	Session.vim	/^nnoremap = :Tabular\/=$/;"	m
n	Session.vim	/^map n Ã®$/;"	m
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
"	Session.vim	/^inoremap <buffer> <silent> " =AutoPairsInsert('"')$/;"	m
'	Session.vim	/^inoremap <buffer> <silent> ' =AutoPairsInsert('''')$/;"	m
(	Session.vim	/^inoremap <buffer> <silent> ( =AutoPairsInsert('(')$/;"	m
)	Session.vim	/^inoremap <buffer> <silent> ) =AutoPairsInsert(')')$/;"	m
,,	Session.vim	/^map ,, <Plug>(easymotion-prefix)$/;"	m
,0	Session.vim	/^inoremap <buffer> <silent> <expr> ,0 AutoPairsToggle()$/;"	m
,0	Session.vim	/^noremap <buffer> <silent> ,0 :call AutoPairsToggle()$/;"	m
,d	Session.vim	/^nnoremap ,d :YcmShowDetailedDiagnostic$/;"	m
,hp	Session.vim	/^nmap <buffer> ,hp <Plug>(GitGutterPreviewHunk)$/;"	m
,hs	Session.vim	/^nmap <buffer> ,hs <Plug>(GitGutterStageHunk)$/;"	m
,hu	Session.vim	/^nmap <buffer> ,hu <Plug>(GitGutterUndoHunk)$/;"	m
,l	Session.vim	/^nnoremap ,l :redraw!$/;"	m
,p	Session.vim	/^nnoremap ,p :call PreviewMarkdown()$/;"	m
,t	Session.vim	/^nmap <silent> ,t :Vex!$/;"	m
-from	PMS5003/Old/Makefile	/^	pandoc --from=markdown --to=rst -o library\/README.rst README.md$/;"	m
0	Session.vim	/^normal! 0$/;"	m
<BS>	Session.vim	/^inoremap <buffer> <silent> <BS> =AutoPairsDelete()$/;"	m
<Down>	Session.vim	/^inoremap <expr> <Down> pumvisible() ? "\\" : "\\<Down>"$/;"	m
<F11>	Session.vim	/^map <silent> <F11> :call system("wmctrl -ir " . v:windowid . " -b toggle,fullscreen")$/;"	m
<NL>	Session.vim	/^nnoremap <NL> j$/;"	m
<Nul>	Session.vim	/^imap <Nul> <C-Space>$/;"	m
<Plug>(-fzf-/)	Session.vim	/^nnoremap <Plug>(-fzf-\/) \/$/;"	m
<Plug>(-fzf-:)	Session.vim	/^nnoremap <Plug>(-fzf-:) :$/;"	m
<Plug>(-fzf-vim-do)	Session.vim	/^nnoremap <Plug>(-fzf-vim-do) :execute g:__fzf_command$/;"	m
<Plug>(GitGutterNextHunk)	Session.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterNextHunk) &diff ? ']c' : ":\\execute v:count1 . 'GitGutterNextHunk'\\$/;"	m
<Plug>(GitGutterPrevHunk)	Session.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterPrevHunk) &diff ? '[c' : ":\\execute v:count1 . 'GitGutterPrevHunk'\\$/;"	m
<Plug>(GitGutterPreviewHunk)	Session.vim	/^nnoremap <silent> <Plug>(GitGutterPreviewHunk) :GitGutterPreviewHunk$/;"	m
<Plug>(GitGutterStageHunk)	Session.vim	/^nnoremap <silent> <Plug>(GitGutterStageHunk) :GitGutterStageHunk$/;"	m
<Plug>(GitGutterTextObjectInnerPending)	Session.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectInnerPending) :call gitgutter#hunk#text_object(1)$/;"	m
<Plug>(GitGutterTextObjectOuterPending)	Session.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectOuterPending) :call gitgutter#hunk#text_object(0)$/;"	m
<Plug>(GitGutterUndoHunk)	Session.vim	/^nnoremap <silent> <Plug>(GitGutterUndoHunk) :GitGutterUndoHunk$/;"	m
<Plug>(ale_complete)	Session.vim	/^inoremap <silent> <Plug>(ale_complete) :ALEComplete$/;"	m
<Plug>(ale_detail)	Session.vim	/^nnoremap <silent> <Plug>(ale_detail) :ALEDetail$/;"	m
<Plug>(ale_disable)	Session.vim	/^nnoremap <silent> <Plug>(ale_disable) :ALEDisable$/;"	m
<Plug>(ale_disable_buffer)	Session.vim	/^nnoremap <silent> <Plug>(ale_disable_buffer) :ALEDisableBuffer$/;"	m
<Plug>(ale_documentation)	Session.vim	/^nnoremap <silent> <Plug>(ale_documentation) :ALEDocumentation$/;"	m
<Plug>(ale_enable)	Session.vim	/^nnoremap <silent> <Plug>(ale_enable) :ALEEnable$/;"	m
<Plug>(ale_enable_buffer)	Session.vim	/^nnoremap <silent> <Plug>(ale_enable_buffer) :ALEEnableBuffer$/;"	m
<Plug>(ale_find_references)	Session.vim	/^nnoremap <silent> <Plug>(ale_find_references) :ALEFindReferences$/;"	m
<Plug>(ale_first)	Session.vim	/^nnoremap <silent> <Plug>(ale_first) :ALEFirst$/;"	m
<Plug>(ale_fix)	Session.vim	/^nnoremap <silent> <Plug>(ale_fix) :ALEFix$/;"	m
<Plug>(ale_go_to_definition)	Session.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition) :ALEGoToDefinition$/;"	m
<Plug>(ale_go_to_definition_in_split)	Session.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_split) :ALEGoToDefinitionInSplit$/;"	m
<Plug>(ale_go_to_definition_in_tab)	Session.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_tab) :ALEGoToDefinitionInTab$/;"	m
<Plug>(ale_go_to_definition_in_vsplit)	Session.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_vsplit) :ALEGoToDefinitionInVSplit$/;"	m
<Plug>(ale_go_to_type_definition)	Session.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition) :ALEGoToTypeDefinition$/;"	m
<Plug>(ale_go_to_type_definition_in_split)	Session.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_split) :ALEGoToTypeDefinitionInSplit$/;"	m
<Plug>(ale_go_to_type_definition_in_tab)	Session.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_tab) :ALEGoToTypeDefinitionInTab$/;"	m
<Plug>(ale_go_to_type_definition_in_vsplit)	Session.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_vsplit) :ALEGoToTypeDefinitionInVSplit$/;"	m
<Plug>(ale_hover)	Session.vim	/^nnoremap <silent> <Plug>(ale_hover) :ALEHover$/;"	m
<Plug>(ale_last)	Session.vim	/^nnoremap <silent> <Plug>(ale_last) :ALELast$/;"	m
<Plug>(ale_lint)	Session.vim	/^nnoremap <silent> <Plug>(ale_lint) :ALELint$/;"	m
<Plug>(ale_next)	Session.vim	/^nnoremap <silent> <Plug>(ale_next) :ALENext$/;"	m
<Plug>(ale_next_error)	Session.vim	/^nnoremap <silent> <Plug>(ale_next_error) :ALENext -error$/;"	m
<Plug>(ale_next_warning)	Session.vim	/^nnoremap <silent> <Plug>(ale_next_warning) :ALENext -warning$/;"	m
<Plug>(ale_next_wrap)	Session.vim	/^nnoremap <silent> <Plug>(ale_next_wrap) :ALENextWrap$/;"	m
<Plug>(ale_next_wrap_error)	Session.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_error) :ALENext -wrap -error$/;"	m
<Plug>(ale_next_wrap_warning)	Session.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_warning) :ALENext -wrap -warning$/;"	m
<Plug>(ale_previous)	Session.vim	/^nnoremap <silent> <Plug>(ale_previous) :ALEPrevious$/;"	m
<Plug>(ale_previous_error)	Session.vim	/^nnoremap <silent> <Plug>(ale_previous_error) :ALEPrevious -error$/;"	m
<Plug>(ale_previous_warning)	Session.vim	/^nnoremap <silent> <Plug>(ale_previous_warning) :ALEPrevious -warning$/;"	m
<Plug>(ale_previous_wrap)	Session.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap) :ALEPreviousWrap$/;"	m
<Plug>(ale_previous_wrap_error)	Session.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_error) :ALEPrevious -wrap -error$/;"	m
<Plug>(ale_previous_wrap_warning)	Session.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_warning) :ALEPrevious -wrap -warning$/;"	m
<Plug>(ale_rename)	Session.vim	/^nnoremap <silent> <Plug>(ale_rename) :ALERename$/;"	m
<Plug>(ale_reset)	Session.vim	/^nnoremap <silent> <Plug>(ale_reset) :ALEReset$/;"	m
<Plug>(ale_reset_buffer)	Session.vim	/^nnoremap <silent> <Plug>(ale_reset_buffer) :ALEResetBuffer$/;"	m
<Plug>(ale_toggle)	Session.vim	/^nnoremap <silent> <Plug>(ale_toggle) :ALEToggle$/;"	m
<Plug>(ale_toggle_buffer)	Session.vim	/^nnoremap <silent> <Plug>(ale_toggle_buffer) :ALEToggleBuffer$/;"	m
<Plug>(easymotion-B)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-B) :call EasyMotion#WBW(0,1)$/;"	m
<Plug>(easymotion-B)	Session.vim	/^onoremap <silent> <Plug>(easymotion-B) :call EasyMotion#WBW(0,1)$/;"	m
<Plug>(easymotion-E)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-E) :call EasyMotion#EW(0,0)$/;"	m
<Plug>(easymotion-E)	Session.vim	/^onoremap <silent> <Plug>(easymotion-E) :call EasyMotion#EW(0,0)$/;"	m
<Plug>(easymotion-F)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-F) :call EasyMotion#S(1,0,1)$/;"	m
<Plug>(easymotion-F)	Session.vim	/^onoremap <silent> <Plug>(easymotion-F) :call EasyMotion#S(1,0,1)$/;"	m
<Plug>(easymotion-F2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-F2) :call EasyMotion#S(2,0,1)$/;"	m
<Plug>(easymotion-F2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-F2) :call EasyMotion#S(2,0,1)$/;"	m
<Plug>(easymotion-Fl)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-Fl) :call EasyMotion#SL(1,0,1)$/;"	m
<Plug>(easymotion-Fl)	Session.vim	/^onoremap <silent> <Plug>(easymotion-Fl) :call EasyMotion#SL(1,0,1)$/;"	m
<Plug>(easymotion-Fl2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-Fl2) :call EasyMotion#SL(2,0,1)$/;"	m
<Plug>(easymotion-Fl2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-Fl2) :call EasyMotion#SL(2,0,1)$/;"	m
<Plug>(easymotion-Fln)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-Fln) :call EasyMotion#SL(-1,0,1)$/;"	m
<Plug>(easymotion-Fln)	Session.vim	/^onoremap <silent> <Plug>(easymotion-Fln) :call EasyMotion#SL(-1,0,1)$/;"	m
<Plug>(easymotion-Fn)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-Fn) :call EasyMotion#S(-1,0,1)$/;"	m
<Plug>(easymotion-Fn)	Session.vim	/^onoremap <silent> <Plug>(easymotion-Fn) :call EasyMotion#S(-1,0,1)$/;"	m
<Plug>(easymotion-N)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-N) :call EasyMotion#Search(0,1,0)$/;"	m
<Plug>(easymotion-N)	Session.vim	/^onoremap <silent> <Plug>(easymotion-N) :call EasyMotion#Search(0,1,0)$/;"	m
<Plug>(easymotion-T)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-T) :call EasyMotion#T(1,0,1)$/;"	m
<Plug>(easymotion-T)	Session.vim	/^onoremap <silent> <Plug>(easymotion-T) :call EasyMotion#T(1,0,1)$/;"	m
<Plug>(easymotion-T2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-T2) :call EasyMotion#T(2,0,1)$/;"	m
<Plug>(easymotion-T2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-T2) :call EasyMotion#T(2,0,1)$/;"	m
<Plug>(easymotion-Tl)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-Tl) :call EasyMotion#TL(1,0,1)$/;"	m
<Plug>(easymotion-Tl)	Session.vim	/^onoremap <silent> <Plug>(easymotion-Tl) :call EasyMotion#TL(1,0,1)$/;"	m
<Plug>(easymotion-Tl2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-Tl2) :call EasyMotion#TL(2,0,1)$/;"	m
<Plug>(easymotion-Tl2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-Tl2) :call EasyMotion#TL(2,0,1)$/;"	m
<Plug>(easymotion-Tln)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-Tln) :call EasyMotion#TL(-1,0,1)$/;"	m
<Plug>(easymotion-Tln)	Session.vim	/^onoremap <silent> <Plug>(easymotion-Tln) :call EasyMotion#TL(-1,0,1)$/;"	m
<Plug>(easymotion-Tn)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-Tn) :call EasyMotion#T(-1,0,1)$/;"	m
<Plug>(easymotion-Tn)	Session.vim	/^onoremap <silent> <Plug>(easymotion-Tn) :call EasyMotion#T(-1,0,1)$/;"	m
<Plug>(easymotion-W)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-W) :call EasyMotion#WBW(0,0)$/;"	m
<Plug>(easymotion-W)	Session.vim	/^onoremap <silent> <Plug>(easymotion-W) :call EasyMotion#WBW(0,0)$/;"	m
<Plug>(easymotion-activate)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-activate) :call EasyMotion#activate(0)$/;"	m
<Plug>(easymotion-activate)	Session.vim	/^onoremap <silent> <Plug>(easymotion-activate) :call EasyMotion#activate(0)$/;"	m
<Plug>(easymotion-b)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-b) :call EasyMotion#WB(0,1)$/;"	m
<Plug>(easymotion-b)	Session.vim	/^onoremap <silent> <Plug>(easymotion-b) :call EasyMotion#WB(0,1)$/;"	m
<Plug>(easymotion-bd-E)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-E) :call EasyMotion#EW(0,2)$/;"	m
<Plug>(easymotion-bd-E)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-E) :call EasyMotion#EW(0,2)$/;"	m
<Plug>(easymotion-bd-W)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-W) :call EasyMotion#WBW(0,2)$/;"	m
<Plug>(easymotion-bd-W)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-W) :call EasyMotion#WBW(0,2)$/;"	m
<Plug>(easymotion-bd-e)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-e) :call EasyMotion#E(0,2)$/;"	m
<Plug>(easymotion-bd-e)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-e) :call EasyMotion#E(0,2)$/;"	m
<Plug>(easymotion-bd-el)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-el) :call EasyMotion#EL(0,2)$/;"	m
<Plug>(easymotion-bd-el)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-el) :call EasyMotion#EL(0,2)$/;"	m
<Plug>(easymotion-bd-f)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-f) :call EasyMotion#S(1,0,2)$/;"	m
<Plug>(easymotion-bd-f)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-f) :call EasyMotion#S(1,0,2)$/;"	m
<Plug>(easymotion-bd-f2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-f2) :call EasyMotion#S(2,0,2)$/;"	m
<Plug>(easymotion-bd-f2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-f2) :call EasyMotion#S(2,0,2)$/;"	m
<Plug>(easymotion-bd-fl)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-fl) :call EasyMotion#SL(1,0,2)$/;"	m
<Plug>(easymotion-bd-fl)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-fl) :call EasyMotion#SL(1,0,2)$/;"	m
<Plug>(easymotion-bd-fl2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-fl2) :call EasyMotion#SL(2,0,2)$/;"	m
<Plug>(easymotion-bd-fl2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-fl2) :call EasyMotion#SL(2,0,2)$/;"	m
<Plug>(easymotion-bd-fln)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-fln) :call EasyMotion#SL(-1,0,2)$/;"	m
<Plug>(easymotion-bd-fln)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-fln) :call EasyMotion#SL(-1,0,2)$/;"	m
<Plug>(easymotion-bd-fn)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-fn) :call EasyMotion#S(-1,0,2)$/;"	m
<Plug>(easymotion-bd-fn)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-fn) :call EasyMotion#S(-1,0,2)$/;"	m
<Plug>(easymotion-bd-jk)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-jk) :call EasyMotion#JK(0,2)$/;"	m
<Plug>(easymotion-bd-jk)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-jk) :call EasyMotion#JK(0,2)$/;"	m
<Plug>(easymotion-bd-n)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-n) :call EasyMotion#Search(0,2,0)$/;"	m
<Plug>(easymotion-bd-n)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-n) :call EasyMotion#Search(0,2,0)$/;"	m
<Plug>(easymotion-bd-t)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-t) :call EasyMotion#T(1,0,2)$/;"	m
<Plug>(easymotion-bd-t)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-t) :call EasyMotion#T(1,0,2)$/;"	m
<Plug>(easymotion-bd-t2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-t2) :call EasyMotion#T(2,0,2)$/;"	m
<Plug>(easymotion-bd-t2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-t2) :call EasyMotion#T(2,0,2)$/;"	m
<Plug>(easymotion-bd-tl)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-tl) :call EasyMotion#TL(1,0,2)$/;"	m
<Plug>(easymotion-bd-tl)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-tl) :call EasyMotion#TL(1,0,2)$/;"	m
<Plug>(easymotion-bd-tl2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-tl2) :call EasyMotion#TL(2,0,2)$/;"	m
<Plug>(easymotion-bd-tl2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-tl2) :call EasyMotion#TL(2,0,2)$/;"	m
<Plug>(easymotion-bd-tln)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-tln) :call EasyMotion#TL(-1,0,2)$/;"	m
<Plug>(easymotion-bd-tln)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-tln) :call EasyMotion#TL(-1,0,2)$/;"	m
<Plug>(easymotion-bd-tn)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-tn) :call EasyMotion#T(-1,0,2)$/;"	m
<Plug>(easymotion-bd-tn)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-tn) :call EasyMotion#T(-1,0,2)$/;"	m
<Plug>(easymotion-bd-w)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-w) :call EasyMotion#WB(0,2)$/;"	m
<Plug>(easymotion-bd-w)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-w) :call EasyMotion#WB(0,2)$/;"	m
<Plug>(easymotion-bd-wl)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bd-wl) :call EasyMotion#WBL(0,2)$/;"	m
<Plug>(easymotion-bd-wl)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bd-wl) :call EasyMotion#WBL(0,2)$/;"	m
<Plug>(easymotion-bl)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-bl) :call EasyMotion#WBL(0,1)$/;"	m
<Plug>(easymotion-bl)	Session.vim	/^onoremap <silent> <Plug>(easymotion-bl) :call EasyMotion#WBL(0,1)$/;"	m
<Plug>(easymotion-dotrepeat)	Session.vim	/^noremap <silent> <Plug>(easymotion-dotrepeat) :call EasyMotion#DotRepeat()$/;"	m
<Plug>(easymotion-e)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-e) :call EasyMotion#E(0,0)$/;"	m
<Plug>(easymotion-e)	Session.vim	/^onoremap <silent> <Plug>(easymotion-e) :call EasyMotion#E(0,0)$/;"	m
<Plug>(easymotion-el)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-el) :call EasyMotion#EL(0,0)$/;"	m
<Plug>(easymotion-el)	Session.vim	/^onoremap <silent> <Plug>(easymotion-el) :call EasyMotion#EL(0,0)$/;"	m
<Plug>(easymotion-eol-bd-jk)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-eol-bd-jk) :call EasyMotion#Eol(0,2)$/;"	m
<Plug>(easymotion-eol-bd-jk)	Session.vim	/^onoremap <silent> <Plug>(easymotion-eol-bd-jk) :call EasyMotion#Eol(0,2)$/;"	m
<Plug>(easymotion-eol-j)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-eol-j) :call EasyMotion#Eol(0,0)$/;"	m
<Plug>(easymotion-eol-j)	Session.vim	/^onoremap <silent> <Plug>(easymotion-eol-j) :call EasyMotion#Eol(0,0)$/;"	m
<Plug>(easymotion-eol-k)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-eol-k) :call EasyMotion#Eol(0,1)$/;"	m
<Plug>(easymotion-eol-k)	Session.vim	/^onoremap <silent> <Plug>(easymotion-eol-k) :call EasyMotion#Eol(0,1)$/;"	m
<Plug>(easymotion-f)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-f) :call EasyMotion#S(1,0,0)$/;"	m
<Plug>(easymotion-f)	Session.vim	/^onoremap <silent> <Plug>(easymotion-f) :call EasyMotion#S(1,0,0)$/;"	m
<Plug>(easymotion-f2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-f2) :call EasyMotion#S(2,0,0)$/;"	m
<Plug>(easymotion-f2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-f2) :call EasyMotion#S(2,0,0)$/;"	m
<Plug>(easymotion-fl)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-fl) :call EasyMotion#SL(1,0,0)$/;"	m
<Plug>(easymotion-fl)	Session.vim	/^onoremap <silent> <Plug>(easymotion-fl) :call EasyMotion#SL(1,0,0)$/;"	m
<Plug>(easymotion-fl2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-fl2) :call EasyMotion#SL(2,0,0)$/;"	m
<Plug>(easymotion-fl2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-fl2) :call EasyMotion#SL(2,0,0)$/;"	m
<Plug>(easymotion-fln)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-fln) :call EasyMotion#SL(-1,0,0)$/;"	m
<Plug>(easymotion-fln)	Session.vim	/^onoremap <silent> <Plug>(easymotion-fln) :call EasyMotion#SL(-1,0,0)$/;"	m
<Plug>(easymotion-fn)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-fn) :call EasyMotion#S(-1,0,0)$/;"	m
<Plug>(easymotion-fn)	Session.vim	/^onoremap <silent> <Plug>(easymotion-fn) :call EasyMotion#S(-1,0,0)$/;"	m
<Plug>(easymotion-gE)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-gE) :call EasyMotion#EW(0,1)$/;"	m
<Plug>(easymotion-gE)	Session.vim	/^onoremap <silent> <Plug>(easymotion-gE) :call EasyMotion#EW(0,1)$/;"	m
<Plug>(easymotion-ge)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-ge) :call EasyMotion#E(0,1)$/;"	m
<Plug>(easymotion-ge)	Session.vim	/^onoremap <silent> <Plug>(easymotion-ge) :call EasyMotion#E(0,1)$/;"	m
<Plug>(easymotion-gel)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-gel) :call EasyMotion#EL(0,1)$/;"	m
<Plug>(easymotion-gel)	Session.vim	/^onoremap <silent> <Plug>(easymotion-gel) :call EasyMotion#EL(0,1)$/;"	m
<Plug>(easymotion-iskeyword-b)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-iskeyword-b) :call EasyMotion#WBK(0,1)$/;"	m
<Plug>(easymotion-iskeyword-b)	Session.vim	/^onoremap <silent> <Plug>(easymotion-iskeyword-b) :call EasyMotion#WBK(0,1)$/;"	m
<Plug>(easymotion-iskeyword-bd-e)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-iskeyword-bd-e) :call EasyMotion#EK(0,2)$/;"	m
<Plug>(easymotion-iskeyword-bd-e)	Session.vim	/^onoremap <silent> <Plug>(easymotion-iskeyword-bd-e) :call EasyMotion#EK(0,2)$/;"	m
<Plug>(easymotion-iskeyword-bd-w)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-iskeyword-bd-w) :call EasyMotion#WBK(0,2)$/;"	m
<Plug>(easymotion-iskeyword-bd-w)	Session.vim	/^onoremap <silent> <Plug>(easymotion-iskeyword-bd-w) :call EasyMotion#WBK(0,2)$/;"	m
<Plug>(easymotion-iskeyword-e)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-iskeyword-e) :call EasyMotion#EK(0,0)$/;"	m
<Plug>(easymotion-iskeyword-e)	Session.vim	/^onoremap <silent> <Plug>(easymotion-iskeyword-e) :call EasyMotion#EK(0,0)$/;"	m
<Plug>(easymotion-iskeyword-ge)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-iskeyword-ge) :call EasyMotion#EK(0,1)$/;"	m
<Plug>(easymotion-iskeyword-ge)	Session.vim	/^onoremap <silent> <Plug>(easymotion-iskeyword-ge) :call EasyMotion#EK(0,1)$/;"	m
<Plug>(easymotion-iskeyword-w)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-iskeyword-w) :call EasyMotion#WBK(0,0)$/;"	m
<Plug>(easymotion-iskeyword-w)	Session.vim	/^onoremap <silent> <Plug>(easymotion-iskeyword-w) :call EasyMotion#WBK(0,0)$/;"	m
<Plug>(easymotion-j)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-j) :call EasyMotion#JK(0,0)$/;"	m
<Plug>(easymotion-j)	Session.vim	/^onoremap <silent> <Plug>(easymotion-j) :call EasyMotion#JK(0,0)$/;"	m
<Plug>(easymotion-jumptoanywhere)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-jumptoanywhere) :call EasyMotion#JumpToAnywhere(0,2)$/;"	m
<Plug>(easymotion-jumptoanywhere)	Session.vim	/^onoremap <silent> <Plug>(easymotion-jumptoanywhere) :call EasyMotion#JumpToAnywhere(0,2)$/;"	m
<Plug>(easymotion-k)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-k) :call EasyMotion#JK(0,1)$/;"	m
<Plug>(easymotion-k)	Session.vim	/^onoremap <silent> <Plug>(easymotion-k) :call EasyMotion#JK(0,1)$/;"	m
<Plug>(easymotion-lineanywhere)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-lineanywhere) :call EasyMotion#LineAnywhere(0,2)$/;"	m
<Plug>(easymotion-lineanywhere)	Session.vim	/^onoremap <silent> <Plug>(easymotion-lineanywhere) :call EasyMotion#LineAnywhere(0,2)$/;"	m
<Plug>(easymotion-linebackward)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-linebackward) :call EasyMotion#LineAnywhere(0,1)$/;"	m
<Plug>(easymotion-linebackward)	Session.vim	/^onoremap <silent> <Plug>(easymotion-linebackward) :call EasyMotion#LineAnywhere(0,1)$/;"	m
<Plug>(easymotion-lineforward)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-lineforward) :call EasyMotion#LineAnywhere(0,0)$/;"	m
<Plug>(easymotion-lineforward)	Session.vim	/^onoremap <silent> <Plug>(easymotion-lineforward) :call EasyMotion#LineAnywhere(0,0)$/;"	m
<Plug>(easymotion-n)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-n) :call EasyMotion#Search(0,0,0)$/;"	m
<Plug>(easymotion-n)	Session.vim	/^onoremap <silent> <Plug>(easymotion-n) :call EasyMotion#Search(0,0,0)$/;"	m
<Plug>(easymotion-next)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-next) :call EasyMotion#NextPrevious(0,0)$/;"	m
<Plug>(easymotion-next)	Session.vim	/^onoremap <silent> <Plug>(easymotion-next) :call EasyMotion#NextPrevious(0,0)$/;"	m
<Plug>(easymotion-overwin-f)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f) :call EasyMotion#OverwinF(1)$/;"	m
<Plug>(easymotion-overwin-f2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f2) :call EasyMotion#OverwinF(2)$/;"	m
<Plug>(easymotion-overwin-line)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-line) :call EasyMotion#overwin#line()$/;"	m
<Plug>(easymotion-overwin-w)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-w) :call EasyMotion#overwin#w()$/;"	m
<Plug>(easymotion-prefix)B	Session.vim	/^map <silent> <Plug>(easymotion-prefix)B <Plug>(easymotion-B)$/;"	m
<Plug>(easymotion-prefix)E	Session.vim	/^map <silent> <Plug>(easymotion-prefix)E <Plug>(easymotion-E)$/;"	m
<Plug>(easymotion-prefix)F	Session.vim	/^map <silent> <Plug>(easymotion-prefix)F <Plug>(easymotion-F)$/;"	m
<Plug>(easymotion-prefix)N	Session.vim	/^map <silent> <Plug>(easymotion-prefix)N <Plug>(easymotion-N)$/;"	m
<Plug>(easymotion-prefix)T	Session.vim	/^map <silent> <Plug>(easymotion-prefix)T <Plug>(easymotion-T)$/;"	m
<Plug>(easymotion-prefix)W	Session.vim	/^map <silent> <Plug>(easymotion-prefix)W <Plug>(easymotion-W)$/;"	m
<Plug>(easymotion-prefix)b	Session.vim	/^map <silent> <Plug>(easymotion-prefix)b <Plug>(easymotion-b)$/;"	m
<Plug>(easymotion-prefix)e	Session.vim	/^map <silent> <Plug>(easymotion-prefix)e <Plug>(easymotion-e)$/;"	m
<Plug>(easymotion-prefix)f	Session.vim	/^map <silent> <Plug>(easymotion-prefix)f <Plug>(easymotion-f)$/;"	m
<Plug>(easymotion-prefix)gE	Session.vim	/^map <silent> <Plug>(easymotion-prefix)gE <Plug>(easymotion-gE)$/;"	m
<Plug>(easymotion-prefix)ge	Session.vim	/^map <silent> <Plug>(easymotion-prefix)ge <Plug>(easymotion-ge)$/;"	m
<Plug>(easymotion-prefix)j	Session.vim	/^map <silent> <Plug>(easymotion-prefix)j <Plug>(easymotion-j)$/;"	m
<Plug>(easymotion-prefix)k	Session.vim	/^map <silent> <Plug>(easymotion-prefix)k <Plug>(easymotion-k)$/;"	m
<Plug>(easymotion-prefix)n	Session.vim	/^map <silent> <Plug>(easymotion-prefix)n <Plug>(easymotion-n)$/;"	m
<Plug>(easymotion-prefix)s	Session.vim	/^map <silent> <Plug>(easymotion-prefix)s <Plug>(easymotion-s)$/;"	m
<Plug>(easymotion-prefix)t	Session.vim	/^map <silent> <Plug>(easymotion-prefix)t <Plug>(easymotion-t)$/;"	m
<Plug>(easymotion-prefix)w	Session.vim	/^map <silent> <Plug>(easymotion-prefix)w <Plug>(easymotion-w)$/;"	m
<Plug>(easymotion-prev)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-prev) :call EasyMotion#NextPrevious(0,1)$/;"	m
<Plug>(easymotion-prev)	Session.vim	/^onoremap <silent> <Plug>(easymotion-prev) :call EasyMotion#NextPrevious(0,1)$/;"	m
<Plug>(easymotion-repeat)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-repeat) :call EasyMotion#Repeat(0)$/;"	m
<Plug>(easymotion-repeat)	Session.vim	/^onoremap <silent> <Plug>(easymotion-repeat) :call EasyMotion#Repeat(0)$/;"	m
<Plug>(easymotion-s)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-s) :call EasyMotion#S(1,0,2)$/;"	m
<Plug>(easymotion-s)	Session.vim	/^onoremap <silent> <Plug>(easymotion-s) :call EasyMotion#S(1,0,2)$/;"	m
<Plug>(easymotion-s2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-s2) :call EasyMotion#S(2,0,2)$/;"	m
<Plug>(easymotion-s2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-s2) :call EasyMotion#S(2,0,2)$/;"	m
<Plug>(easymotion-sl)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-sl) :call EasyMotion#SL(1,0,2)$/;"	m
<Plug>(easymotion-sl)	Session.vim	/^onoremap <silent> <Plug>(easymotion-sl) :call EasyMotion#SL(1,0,2)$/;"	m
<Plug>(easymotion-sl2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-sl2) :call EasyMotion#SL(2,0,2)$/;"	m
<Plug>(easymotion-sl2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-sl2) :call EasyMotion#SL(2,0,2)$/;"	m
<Plug>(easymotion-sln)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-sln) :call EasyMotion#SL(-1,0,2)$/;"	m
<Plug>(easymotion-sln)	Session.vim	/^onoremap <silent> <Plug>(easymotion-sln) :call EasyMotion#SL(-1,0,2)$/;"	m
<Plug>(easymotion-sn)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-sn) :call EasyMotion#S(-1,0,2)$/;"	m
<Plug>(easymotion-sn)	Session.vim	/^onoremap <silent> <Plug>(easymotion-sn) :call EasyMotion#S(-1,0,2)$/;"	m
<Plug>(easymotion-sol-bd-jk)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-sol-bd-jk) :call EasyMotion#Sol(0,2)$/;"	m
<Plug>(easymotion-sol-bd-jk)	Session.vim	/^onoremap <silent> <Plug>(easymotion-sol-bd-jk) :call EasyMotion#Sol(0,2)$/;"	m
<Plug>(easymotion-sol-j)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-sol-j) :call EasyMotion#Sol(0,0)$/;"	m
<Plug>(easymotion-sol-j)	Session.vim	/^onoremap <silent> <Plug>(easymotion-sol-j) :call EasyMotion#Sol(0,0)$/;"	m
<Plug>(easymotion-sol-k)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-sol-k) :call EasyMotion#Sol(0,1)$/;"	m
<Plug>(easymotion-sol-k)	Session.vim	/^onoremap <silent> <Plug>(easymotion-sol-k) :call EasyMotion#Sol(0,1)$/;"	m
<Plug>(easymotion-t)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-t) :call EasyMotion#T(1,0,0)$/;"	m
<Plug>(easymotion-t)	Session.vim	/^onoremap <silent> <Plug>(easymotion-t) :call EasyMotion#T(1,0,0)$/;"	m
<Plug>(easymotion-t2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-t2) :call EasyMotion#T(2,0,0)$/;"	m
<Plug>(easymotion-t2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-t2) :call EasyMotion#T(2,0,0)$/;"	m
<Plug>(easymotion-tl)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-tl) :call EasyMotion#TL(1,0,0)$/;"	m
<Plug>(easymotion-tl)	Session.vim	/^onoremap <silent> <Plug>(easymotion-tl) :call EasyMotion#TL(1,0,0)$/;"	m
<Plug>(easymotion-tl2)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-tl2) :call EasyMotion#TL(2,0,0)$/;"	m
<Plug>(easymotion-tl2)	Session.vim	/^onoremap <silent> <Plug>(easymotion-tl2) :call EasyMotion#TL(2,0,0)$/;"	m
<Plug>(easymotion-tln)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-tln) :call EasyMotion#TL(-1,0,0)$/;"	m
<Plug>(easymotion-tln)	Session.vim	/^onoremap <silent> <Plug>(easymotion-tln) :call EasyMotion#TL(-1,0,0)$/;"	m
<Plug>(easymotion-tn)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-tn) :call EasyMotion#T(-1,0,0)$/;"	m
<Plug>(easymotion-tn)	Session.vim	/^onoremap <silent> <Plug>(easymotion-tn) :call EasyMotion#T(-1,0,0)$/;"	m
<Plug>(easymotion-vim-N)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-vim-N) :call EasyMotion#Search(0,1,1)$/;"	m
<Plug>(easymotion-vim-N)	Session.vim	/^onoremap <silent> <Plug>(easymotion-vim-N) :call EasyMotion#Search(0,1,1)$/;"	m
<Plug>(easymotion-vim-n)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-vim-n) :call EasyMotion#Search(0,0,1)$/;"	m
<Plug>(easymotion-vim-n)	Session.vim	/^onoremap <silent> <Plug>(easymotion-vim-n) :call EasyMotion#Search(0,0,1)$/;"	m
<Plug>(easymotion-w)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-w) :call EasyMotion#WB(0,0)$/;"	m
<Plug>(easymotion-w)	Session.vim	/^onoremap <silent> <Plug>(easymotion-w) :call EasyMotion#WB(0,0)$/;"	m
<Plug>(easymotion-wl)	Session.vim	/^nnoremap <silent> <Plug>(easymotion-wl) :call EasyMotion#WBL(0,0)$/;"	m
<Plug>(easymotion-wl)	Session.vim	/^onoremap <silent> <Plug>(easymotion-wl) :call EasyMotion#WBL(0,0)$/;"	m
<Plug>(fzf-complete-buffer-line)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<Plug>(fzf-complete-file)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-file) fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -type f -print -o -type l -print | sed 's:^..::'")$/;"	m
<Plug>(fzf-complete-file-ag)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-file-ag) fzf#vim#complete#path('ag -l -g ""')$/;"	m
<Plug>(fzf-complete-line)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-line) fzf#vim#complete#line()$/;"	m
<Plug>(fzf-complete-path)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-path) fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -print | sed '1d;s:^..::'")$/;"	m
<Plug>(fzf-complete-word)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-word) fzf#vim#complete#word()$/;"	m
<Plug>(fzf-maps-i)	Session.vim	/^inoremap <silent> <Plug>(fzf-maps-i) :call fzf#vim#maps('i', 0)$/;"	m
<Plug>(fzf-maps-n)	Session.vim	/^nnoremap <silent> <Plug>(fzf-maps-n) :call fzf#vim#maps('n', 0)$/;"	m
<Plug>(fzf-maps-o)	Session.vim	/^onoremap <silent> <Plug>(fzf-maps-o) :call fzf#vim#maps('o', 0)$/;"	m
<Plug>GitGutterNextHunk	Session.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\call gitgutter#utility#warn('please change your map \\<Plug>GitGutterNextHunk to \\<Plug>(GitGutterNextHunk)')\\$/;"	m
<Plug>GitGutterPrevHunk	Session.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\call gitgutter#utility#warn('please change your map \\<Plug>GitGutterPrevHunk to \\<Plug>(GitGutterPrevHunk)')\\$/;"	m
<Plug>GitGutterPreviewHunk	Session.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :call gitgutter#utility#warn('please change your map <Plug>GitGutterPreviewHunk to <Plug>(GitGutterPreviewHunk)')$/;"	m
<Plug>GitGutterStageHunk	Session.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk :call gitgutter#utility#warn('please change your map <Plug>GitGutterStageHunk to <Plug>(GitGutterStageHunk)')$/;"	m
<Plug>GitGutterUndoHunk	Session.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk :call gitgutter#utility#warn('please change your map <Plug>GitGutterUndoHunk to <Plug>(GitGutterUndoHunk)')$/;"	m
<Plug>NetrwBrowseX	Session.vim	/^nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(expand((exists("g:netrw_gx")? g:netrw_gx : '<cfile>')),netrw#CheckIfRemote())$/;"	m
<Plug>NetrwBrowseXVis	Session.vim	/^vnoremap <silent> <Plug>NetrwBrowseXVis :call netrw#BrowseXVis()$/;"	m
<Plug>SurroundRepeat	Session.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<S-Tab>	Session.vim	/^inoremap <expr> <S-Tab> pumvisible() ? "\\" : "\\<S-Tab>"$/;"	m
<SNR>34_AutoPairsReturn	Session.vim	/^inoremap <silent> <SNR>34_AutoPairsReturn =AutoPairsReturn()$/;"	m
<Up>	Session.vim	/^inoremap <expr> <Up> pumvisible() ? "\\" : "\\<Up>"$/;"	m
AM2302	DHT22Logger/Adafruit_DHT/common.py	/^AM2302 = 22$/;"	v
AM2302	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^AM2302 = 22$/;"	v
AM2302	DHT22Logger/source/common_dht_read.h	36;"	d
BASE	DHT22Logger/source/Raspberry_Pi/pi_mmio.c	32;"	d	file:
BBB_DHT_READ_H	DHT22Logger/source/Beaglebone_Black/bbb_dht_read.h	22;"	d
BBB_MMIO_H	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	58;"	d
BEAGLEBONE_BLACK	DHT22Logger/Adafruit_DHT/platform_detect.py	/^BEAGLEBONE_BLACK = 2$/;"	v
BEAGLEBONE_BLACK	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/platform_detect.py	/^BEAGLEBONE_BLACK = 2$/;"	v
BINARY_COMMANDS	DHT22Logger/setup.py	/^BINARY_COMMANDS = [$/;"	v
Beaglebone_Black_Driver_read	DHT22Logger/source/_Beaglebone_Black_Driver.c	/^static PyObject* Beaglebone_Black_Driver_read(PyObject *self, PyObject *args)$/;"	f	file:
COMMON_DHT_READ_H	DHT22Logger/source/common_dht_read.h	22;"	d
ChecksumMismatchError	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^class ChecksumMismatchError(RuntimeError):$/;"	c
ChecksumMismatchError	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^class ChecksumMismatchError(RuntimeError):$/;"	c
ChecksumMismatchError	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^class ChecksumMismatchError(RuntimeError):$/;"	c
ChecksumMismatchError	PMS5003/Old/library/pms5003/__init__.py	/^class ChecksumMismatchError(RuntimeError):$/;"	c
DHT11	DHT22Logger/Adafruit_DHT/common.py	/^DHT11  = 11$/;"	v
DHT11	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^DHT11  = 11$/;"	v
DHT11	DHT22Logger/source/common_dht_read.h	34;"	d
DHT22	DHT22Logger/Adafruit_DHT/common.py	/^DHT22  = 22$/;"	v
DHT22	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^DHT22  = 22$/;"	v
DHT22	DHT22Logger/source/common_dht_read.h	35;"	d
DHT22	master.py	/^DHT22 = Script($/;"	v
DHT_ERROR_ARGUMENT	DHT22Logger/Adafruit_DHT/common.py	/^DHT_ERROR_ARGUMENT = -3$/;"	v
DHT_ERROR_ARGUMENT	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^DHT_ERROR_ARGUMENT = -3$/;"	v
DHT_ERROR_ARGUMENT	DHT22Logger/source/common_dht_read.h	29;"	d
DHT_ERROR_CHECKSUM	DHT22Logger/Adafruit_DHT/common.py	/^DHT_ERROR_CHECKSUM = -2$/;"	v
DHT_ERROR_CHECKSUM	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^DHT_ERROR_CHECKSUM = -2$/;"	v
DHT_ERROR_CHECKSUM	DHT22Logger/source/common_dht_read.h	28;"	d
DHT_ERROR_GPIO	DHT22Logger/Adafruit_DHT/common.py	/^DHT_ERROR_GPIO     = -4$/;"	v
DHT_ERROR_GPIO	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^DHT_ERROR_GPIO     = -4$/;"	v
DHT_ERROR_GPIO	DHT22Logger/source/common_dht_read.h	30;"	d
DHT_ERROR_TIMEOUT	DHT22Logger/Adafruit_DHT/common.py	/^DHT_ERROR_TIMEOUT  = -1$/;"	v
DHT_ERROR_TIMEOUT	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^DHT_ERROR_TIMEOUT  = -1$/;"	v
DHT_ERROR_TIMEOUT	DHT22Logger/source/common_dht_read.h	27;"	d
DHT_MAXCOUNT	DHT22Logger/source/Beaglebone_Black/bbb_dht_read.c	31;"	d	file:
DHT_MAXCOUNT	DHT22Logger/source/Raspberry_Pi/pi_dht_read.c	31;"	d	file:
DHT_MAXCOUNT	DHT22Logger/source/Raspberry_Pi_2/pi_2_dht_read.c	31;"	d	file:
DHT_PIN	DHT22Logger/examples/google_spreadsheet.py	/^DHT_PIN  = 23$/;"	v
DHT_PULSES	DHT22Logger/source/Beaglebone_Black/bbb_dht_read.c	36;"	d	file:
DHT_PULSES	DHT22Logger/source/Raspberry_Pi/pi_dht_read.c	36;"	d	file:
DHT_PULSES	DHT22Logger/source/Raspberry_Pi_2/pi_2_dht_read.c	36;"	d	file:
DHT_SUCCESS	DHT22Logger/Adafruit_DHT/common.py	/^DHT_SUCCESS        =  0$/;"	v
DHT_SUCCESS	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^DHT_SUCCESS        =  0$/;"	v
DHT_SUCCESS	DHT22Logger/source/common_dht_read.h	31;"	d
DHT_TYPE	DHT22Logger/examples/google_spreadsheet.py	/^DHT_TYPE = Adafruit_DHT.DHT22$/;"	v
FREQUENCY_SECONDS	DHT22Logger/examples/google_spreadsheet.py	/^FREQUENCY_SECONDS      = 30$/;"	v
GDOCS_OAUTH_JSON	DHT22Logger/examples/google_spreadsheet.py	/^GDOCS_OAUTH_JSON       = 'your SpreadsheetData-*.json file name'$/;"	v
GDOCS_SPREADSHEET_NAME	DHT22Logger/examples/google_spreadsheet.py	/^GDOCS_SPREADSHEET_NAME = 'your google docs spreadsheet name'$/;"	v
GPIO0_ADDR	DHT22Logger/source/Beaglebone_Black/bbb_mmio.c	31;"	d	file:
GPIO1_ADDR	DHT22Logger/source/Beaglebone_Black/bbb_mmio.c	32;"	d	file:
GPIO2_ADDR	DHT22Logger/source/Beaglebone_Black/bbb_mmio.c	33;"	d	file:
GPIO3_ADDR	DHT22Logger/source/Beaglebone_Black/bbb_mmio.c	34;"	d	file:
GPIO_BASE	DHT22Logger/source/Raspberry_Pi/pi_mmio.c	33;"	d	file:
GPIO_BASE_OFFSET	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.c	33;"	d	file:
GPIO_LENGTH	DHT22Logger/source/Beaglebone_Black/bbb_mmio.c	30;"	d	file:
GPIO_LENGTH	DHT22Logger/source/Raspberry_Pi/pi_mmio.c	34;"	d	file:
GPIO_LENGTH	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.c	34;"	d	file:
H	Session.vim	/^nnoremap H gT$/;"	m
L	Session.vim	/^nnoremap L gt$/;"	m
LIBRARY_NAME	PMS5003/Old/Makefile	/^LIBRARY_NAME=$(shell cat library\/setup.py | grep name | awk -F"'" '{print $$2}')$/;"	m
LIBRARY_VERSION	PMS5003/Old/Makefile	/^LIBRARY_VERSION=$(shell cat library\/setup.py | grep version | awk -F"'" '{print $$2}')$/;"	m
LOG_ENTRY	master.py	/^LOG_ENTRY      = '###' # each entry line and only entry lines in the log file MUST begin with this substring$/;"	v
LOG_FILE	master.py	/^LOG_FILE       = 'sensors.log'$/;"	v
LOG_PERSISTENT	master.py	/^LOG_PERSISTENT = 100   # the number of entries to keep (any older ones will be deleted)$/;"	v
MMIO_ERROR_ARGUMENT	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	63;"	d
MMIO_ERROR_DEVMEM	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	64;"	d
MMIO_ERROR_DEVMEM	DHT22Logger/source/Raspberry_Pi/pi_mmio.h	30;"	d
MMIO_ERROR_DEVMEM	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.h	30;"	d
MMIO_ERROR_MMAP	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	65;"	d
MMIO_ERROR_MMAP	DHT22Logger/source/Raspberry_Pi/pi_mmio.h	31;"	d
MMIO_ERROR_MMAP	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.h	31;"	d
MMIO_ERROR_OFFSET	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.h	32;"	d
MMIO_GPIO_CLEARDATAOUT	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	70;"	d
MMIO_GPIO_DATAIN	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	69;"	d
MMIO_GPIO_DATAOUT	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	68;"	d
MMIO_GPIO_SETDATAOUT	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	71;"	d
MMIO_OE_ADDR	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	67;"	d
MMIO_SUCCESS	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	62;"	d
MMIO_SUCCESS	DHT22Logger/source/Raspberry_Pi/pi_mmio.h	29;"	d
MMIO_SUCCESS	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.h	29;"	d
MockSerial	PMS5003/Old/library/tests/test_setup.py	/^class MockSerial():$/;"	c
MockSerialFail	PMS5003/Old/library/tests/test_setup.py	/^class MockSerialFail():$/;"	c
PI_2_DHT_READ_H	DHT22Logger/source/Raspberry_Pi_2/pi_2_dht_read.h	22;"	d
PI_2_MMIO_H	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.h	25;"	d
PI_DHT_READ_H	DHT22Logger/source/Raspberry_Pi/pi_dht_read.h	22;"	d
PI_MMIO_H	DHT22Logger/source/Raspberry_Pi/pi_mmio.h	25;"	d
PMS5003	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^class PMS5003():$/;"	c
PMS5003	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^class PMS5003():$/;"	c
PMS5003	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^class PMS5003():$/;"	c
PMS5003	PMS5003/Old/library/pms5003/__init__.py	/^class PMS5003():$/;"	c
PMS5003	master.py	/^PMS5003 = Script($/;"	v
PMS5003Data	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^class PMS5003Data():$/;"	c
PMS5003Data	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^class PMS5003Data():$/;"	c
PMS5003Data	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^class PMS5003Data():$/;"	c
PMS5003Data	PMS5003/Old/library/pms5003/__init__.py	/^class PMS5003Data():$/;"	c
PMS5003_SOF	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^PMS5003_SOF = bytearray(b'\\x42\\x4d')$/;"	v
PMS5003_SOF	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^PMS5003_SOF = bytearray(b'\\x42\\x4d')$/;"	v
PMS5003_SOF	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^PMS5003_SOF = bytearray(b'\\x42\\x4d')$/;"	v
PMS5003_SOF	PMS5003/Old/library/pms5003/__init__.py	/^PMS5003_SOF = bytearray(b'\\x42\\x4d')$/;"	v
POLLING_RATE	master.py	/^    POLLING_RATE = 300          # how long each while loop iteration will wait for at the end$/;"	v
PyInit_Beaglebone_Black_Driver	DHT22Logger/source/_Beaglebone_Black_Driver.c	/^PyMODINIT_FUNC PyInit_Beaglebone_Black_Driver(void)$/;"	f
PyInit_Raspberry_Pi_2_Driver	DHT22Logger/source/_Raspberry_Pi_2_Driver.c	/^PyMODINIT_FUNC PyInit_Raspberry_Pi_2_Driver(void)$/;"	f
PyInit_Raspberry_Pi_Driver	DHT22Logger/source/_Raspberry_Pi_Driver.c	/^PyMODINIT_FUNC PyInit_Raspberry_Pi_Driver(void)$/;"	f
PyInit_Test_Driver	DHT22Logger/source/_Test_Driver.c	/^PyMODINIT_FUNC PyInit_Test_Driver(void)$/;"	f
QUEUE_FILE	master.py	/^QUEUE_FILE = 'data_queue.txt~'$/;"	v
RASPBERRY_PI	DHT22Logger/Adafruit_DHT/platform_detect.py	/^RASPBERRY_PI     = 1$/;"	v
RASPBERRY_PI	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/platform_detect.py	/^RASPBERRY_PI     = 1$/;"	v
RESET_HOUR	master.py	/^    RESET_HOUR = 23             # during this hour all flags will be reset to False (last_day will also be incremented)$/;"	v
RETRY_MAX	DHT22Logger/examples/AdafruitDHT_avg.py	/^RETRY_MAX   = 15$/;"	v
RETRY_MAX	PMS5003/Old/examples/pm25pms5003_avg.py	/^RETRY_MAX   = 15$/;"	v
Raspberry_Pi_2_Driver_read	DHT22Logger/source/_Raspberry_Pi_2_Driver.c	/^static PyObject* Raspberry_Pi_2_Driver_read(PyObject *self, PyObject *args)$/;"	f	file:
Raspberry_Pi_Driver_read	DHT22Logger/source/_Raspberry_Pi_Driver.c	/^static PyObject* Raspberry_Pi_Driver_read(PyObject *self, PyObject *args)$/;"	f	file:
ReadTimeoutError	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^class ReadTimeoutError(RuntimeError):$/;"	c
ReadTimeoutError	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^class ReadTimeoutError(RuntimeError):$/;"	c
ReadTimeoutError	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^class ReadTimeoutError(RuntimeError):$/;"	c
ReadTimeoutError	PMS5003/Old/library/pms5003/__init__.py	/^class ReadTimeoutError(RuntimeError):$/;"	c
SENSORS	DHT22Logger/Adafruit_DHT/common.py	/^SENSORS = [DHT11, DHT22, AM2302]$/;"	v
SENSORS	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^SENSORS = [DHT11, DHT22, AM2302]$/;"	v
Script	scripthandler.py	/^class Script:$/;"	c
SerialTimeoutError	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^class SerialTimeoutError(RuntimeError):$/;"	c
SerialTimeoutError	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^class SerialTimeoutError(RuntimeError):$/;"	c
SerialTimeoutError	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^class SerialTimeoutError(RuntimeError):$/;"	c
SerialTimeoutError	PMS5003/Old/library/pms5003/__init__.py	/^class SerialTimeoutError(RuntimeError):$/;"	c
SessionLoad	Session.vim	/^let SessionLoad = 1$/;"	v
TEST_DHT_READ_H	DHT22Logger/source/Test/test_dht_read.h	22;"	d
TRANSIENT_ERRORS	DHT22Logger/Adafruit_DHT/common.py	/^TRANSIENT_ERRORS = [DHT_ERROR_CHECKSUM, DHT_ERROR_TIMEOUT]$/;"	v
TRANSIENT_ERRORS	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^TRANSIENT_ERRORS = [DHT_ERROR_CHECKSUM, DHT_ERROR_TIMEOUT]$/;"	v
Test_Driver_read	DHT22Logger/source/_Test_Driver.c	/^static PyObject* Test_Driver_read(PyObject *self, PyObject *args)$/;"	f	file:
UNKNOWN	DHT22Logger/Adafruit_DHT/platform_detect.py	/^UNKNOWN          = 0$/;"	v
UNKNOWN	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/platform_detect.py	/^UNKNOWN          = 0$/;"	v
Y	Session.vim	/^map Y y\$$/;"	m
[	Session.vim	/^inoremap <buffer> <silent> [ =AutoPairsInsert('[')$/;"	m
[c	Session.vim	/^nmap <buffer> [c <Plug>(GitGutterPrevHunk)$/;"	m
\	Session.vim	/^nnoremap \\ ,$/;"	m
\a	Session.vim	/^nnoremap \\a :ALEToggle$/;"	m
\e	Session.vim	/^nnoremap \\e :ALEDetail$/;"	m
]	Session.vim	/^inoremap <buffer> <silent> ] =AutoPairsInsert(']')$/;"	m
]c	Session.vim	/^nmap <buffer> ]c <Plug>(GitGutterNextHunk)$/;"	m
__init__	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^    def __init__(self, device='\/dev\/ttyAMA0', baudrate=9600, pin_enable=22, pin_reset=27):$/;"	m	class:PMS5003
__init__	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^    def __init__(self, raw_data):$/;"	m	class:PMS5003Data
__init__	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^    def __init__(self, device='\/dev\/ttyAMA0', baudrate=9600, pin_enable=22, pin_reset=27):$/;"	m	class:PMS5003
__init__	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^    def __init__(self, raw_data):$/;"	m	class:PMS5003Data
__init__	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^    def __init__(self, device='\/dev\/ttyAMA0', baudrate=9600, pin_enable=22, pin_reset=27):$/;"	m	class:PMS5003
__init__	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^    def __init__(self, raw_data):$/;"	m	class:PMS5003Data
__init__	PMS5003/Old/library/pms5003/__init__.py	/^    def __init__(self, device='\/dev\/ttyAMA0', baudrate=9600, pin_enable=22, pin_reset=27):$/;"	m	class:PMS5003
__init__	PMS5003/Old/library/pms5003/__init__.py	/^    def __init__(self, raw_data):$/;"	m	class:PMS5003Data
__init__	PMS5003/Old/library/tests/test_setup.py	/^    def __init__(self):$/;"	m	class:MockSerial
__init__	PMS5003/Old/library/tests/test_setup.py	/^    def __init__(self):$/;"	m	class:MockSerialFail
__init__	scripthandler.py	/^    def __init__(self, name, args, command='python'):$/;"	m	class:Script
__repr__	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^    def __repr__(self):$/;"	m	class:PMS5003Data	file:
__repr__	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^    def __repr__(self):$/;"	m	class:PMS5003Data	file:
__repr__	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^    def __repr__(self):$/;"	m	class:PMS5003Data	file:
__repr__	PMS5003/Old/library/pms5003/__init__.py	/^    def __repr__(self):$/;"	m	class:PMS5003Data	file:
__repr__	scripthandler.py	/^    def __repr__(self):$/;"	m	class:Script	file:
__str__	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^    def __str__(self):$/;"	f	file:
__str__	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^    def __str__(self):$/;"	f	file:
__str__	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^    def __str__(self):$/;"	f	file:
__str__	PMS5003/Old/library/pms5003/__init__.py	/^    def __str__(self):$/;"	f	file:
__version__	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^__version__ = '0.0.1'$/;"	v
__version__	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^__version__ = '0.0.1'$/;"	v
__version__	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^__version__ = '0.0.1'$/;"	v
__version__	PMS5003/Old/library/pms5003/__init__.py	/^__version__ = '0.0.1'$/;"	v
_mock	PMS5003/Old/library/tests/test_setup.py	/^def _mock():$/;"	f
`	Session.vim	/^inoremap <buffer> <silent> ` =AutoPairsInsert('`')$/;"	m
ac	Session.vim	/^omap <buffer> ac <Plug>(GitGutterTextObjectOuterPending)$/;"	m
args	master.py	/^    args  = '',$/;"	v
args	master.py	/^    args  = '22 4',$/;"	v
author	DHT22Logger/setup.py	/^      author            = 'Tony DiCola',$/;"	v
author	PMS5003/Old/library/setup.py	/^    author='Philip Howard',$/;"	v
author_email	DHT22Logger/setup.py	/^      author_email      = 'tdicola@adafruit.com',$/;"	v
author_email	PMS5003/Old/library/setup.py	/^    author_email='phil@pimoroni.com',$/;"	v
base	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	/^  volatile uint32_t* base;$/;"	m	struct:__anon1
bbb_dht_module	DHT22Logger/source/_Beaglebone_Black_Driver.c	/^static struct PyModuleDef bbb_dht_module = {$/;"	v	typeref:struct:PyModuleDef	file:
bbb_dht_read	DHT22Logger/source/Beaglebone_Black/bbb_dht_read.c	/^int bbb_dht_read(int type, int gpio_base, int gpio_number, float* humidity, float* temperature) {$/;"	f
bbb_mmio_get_gpio	DHT22Logger/source/Beaglebone_Black/bbb_mmio.c	/^int bbb_mmio_get_gpio(int base, int number, gpio_t* gpio) {$/;"	f
bbb_mmio_input	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	/^static inline uint32_t bbb_mmio_input(gpio_t gpio) {$/;"	f
bbb_mmio_set_high	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	/^static inline void bbb_mmio_set_high(gpio_t gpio) {$/;"	f
bbb_mmio_set_input	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	/^static inline void bbb_mmio_set_input(gpio_t gpio) {$/;"	f
bbb_mmio_set_low	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	/^static inline void bbb_mmio_set_low(gpio_t gpio) {$/;"	f
bbb_mmio_set_output	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	/^static inline void bbb_mmio_set_output(gpio_t gpio) {$/;"	f
begin_log_entry	master.py	/^def begin_log_entry(fname):$/;"	f
busy_wait_milliseconds	DHT22Logger/source/common_dht_read.c	/^void busy_wait_milliseconds(uint32_t millis) {$/;"	f
cS	Session.vim	/^nmap cS <Plug>CSurround$/;"	m
call	scripthandler.py	/^    def call(self):$/;"	m	class:Script
call_sensors	master.py	/^    def call_sensors():$/;"	f
classifiers	DHT22Logger/setup.py	/^      classifiers       = classifiers,$/;"	v
classifiers	DHT22Logger/setup.py	/^classifiers = ['Development Status :: 4 - Beta',$/;"	v
classifiers	PMS5003/Old/library/setup.py	/^    classifiers=classifiers,$/;"	v
classifiers	PMS5003/Old/library/setup.py	/^classifiers = ['Development Status :: 4 - Beta',$/;"	v
concat_callable	scripthandler.py	/^    def concat_callable(self):$/;"	m	class:Script
cs	Session.vim	/^nmap cs <Plug>Csurround$/;"	m
cur	DHT22Logger/examples/AdafruitDHT.py	/^cur = db.cursor()$/;"	v
cur	DHT22Logger/examples/dbtest.py	/^    cur = db.cursor()$/;"	v
cur	PMS5003/Old/examples/pm25pms5003.py	/^cur = db.cursor()$/;"	v
data	PMS5003/Old/examples/all.py	/^        data = pms5003.read()$/;"	v
data	PMS5003/Old/examples/pm25pms5003.py	/^    data = pms5003.read()$/;"	v
data	PMS5003/Old/examples/pm25pms5003_avg.py	/^            data = pms5003.read()$/;"	v
data	PMS5003/Old/examples/specific.py	/^        data = pms5003.read()$/;"	v
date	DHT22Logger/examples/AdafruitDHT.py	/^date = datetime.datetime.now();$/;"	v
date	DHT22Logger/examples/dbtest.py	/^    date = datetime.datetime.now();$/;"	v
date	DHT22Logger/examples/sensortest.py	/^date = datetime.datetime.now();$/;"	v
date	PMS5003/Old/examples/pm25pms5003.py	/^date = datetime.datetime.now();$/;"	v
date1	DHT22Logger/examples/AdafruitDHT_avg.py	/^date1 = datetime.datetime.now()$/;"	v
date1	PMS5003/Old/examples/pm25pms5003_avg.py	/^date1 = datetime.datetime.now()$/;"	v
date2	DHT22Logger/examples/AdafruitDHT_avg.py	/^    date2 = datetime.datetime.now()$/;"	v
date2	PMS5003/Old/examples/pm25pms5003_avg.py	/^    date2 = datetime.datetime.now()$/;"	v
date_str	DHT22Logger/examples/AdafruitDHT.py	/^date_str = '{}-{}-{}'.format(str(date.year), str(date.month), str(date.day))$/;"	v
date_str	DHT22Logger/examples/AdafruitDHT_avg.py	/^    date_str = '{}-{}-{}'.format(str(date2.year), str(date2.month), str(date2.day))$/;"	v
date_str	DHT22Logger/examples/dbtest.py	/^    date_str = '{}-{}-{}'.format(str(date.year), str(date.month), str(date.day))$/;"	v
date_str	DHT22Logger/examples/sensortest.py	/^date_str = '{}-{}-{}'.format(str(date.year), str(date.month), str(date.day))$/;"	v
date_str	PMS5003/Old/examples/pm25pms5003.py	/^date_str = '{}-{}-{}'.format(str(date.year), str(date.month), str(date.day))$/;"	v
date_str	PMS5003/Old/examples/pm25pms5003_avg.py	/^    date_str = '{}-{}-{}'.format(str(date2.year), str(date2.month), str(date2.day))$/;"	v
db	DHT22Logger/examples/AdafruitDHT.py	/^     db     = mysql_info['db'])     # name of the database$/;"	v
db	DHT22Logger/examples/AdafruitDHT.py	/^db = mysql.connector.connect($/;"	v
db	DHT22Logger/examples/dbtest.py	/^     db     = mysql_info['db'])     # name of the database$/;"	v
db	DHT22Logger/examples/dbtest.py	/^db = mysql.connector.connect($/;"	v
db	PMS5003/Old/examples/pm25pms5003.py	/^     db     = mysql_info['db'])     # name of the database$/;"	v
db	PMS5003/Old/examples/pm25pms5003.py	/^db = mysql.connector.connect($/;"	v
description	DHT22Logger/setup.py	/^      description       = 'Library to get readings from the DHT11, DHT22, and AM2302 humidity and temperature sensors on a Raspberry Pi or Beaglebone Black.',$/;"	v
ds	Session.vim	/^nmap ds <Plug>Dsurround$/;"	m
ext_modules	DHT22Logger/setup.py	/^      ext_modules       = extensions)$/;"	v
extensions	DHT22Logger/setup.py	/^extensions = []$/;"	v
flags	master.py	/^    flags = {$/;"	v
g	Session.vim	/^nnoremap <silent> g :call multiple_cursors#new("n", 0)$/;"	m
get_platform	DHT22Logger/Adafruit_DHT/common.py	/^def get_platform():$/;"	f
get_platform	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^def get_platform():$/;"	f
gpio_addresses	DHT22Logger/source/Beaglebone_Black/bbb_mmio.c	/^static uint32_t gpio_addresses[4] = { GPIO0_ADDR, GPIO1_ADDR, GPIO2_ADDR, GPIO3_ADDR };$/;"	v	file:
gpio_base	DHT22Logger/source/Beaglebone_Black/bbb_mmio.c	/^static volatile uint32_t* gpio_base[4] = { NULL };$/;"	v	file:
gpio_t	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	/^} gpio_t;$/;"	t	typeref:struct:__anon1
gx	Session.vim	/^nmap gx <Plug>NetrwBrowseX$/;"	m
gx	Session.vim	/^vmap gx <Plug>NetrwBrowseXVis$/;"	m
gÃ®	Session.vim	/^nnoremap <silent> gÃ® :call multiple_cursors#select_all("n", 0)$/;"	m
host	DHT22Logger/examples/AdafruitDHT.py	/^     host   = mysql_info['ip'],     # your host, usually localhost$/;"	v
host	DHT22Logger/examples/dbtest.py	/^     host   = mysql_info['ip'],     # your host, usually localhost$/;"	v
host	PMS5003/Old/examples/pm25pms5003.py	/^     host   = mysql_info['ip'],     # your host, usually localhost$/;"	v
humidity	DHT22Logger/examples/AdafruitDHT.py	/^humidity = -1;$/;"	v
humidity	DHT22Logger/examples/AdafruitDHT_avg.py	/^humidity    = 0.0$/;"	v
humidity	DHT22Logger/examples/dbtest.py	/^    humidity = 0.35$/;"	v
humidity	DHT22Logger/examples/sensortest.py	/^humidity = -1;$/;"	v
i	PMS5003/Old/examples/all.py	/^i = 1$/;"	v
ic	Session.vim	/^omap <buffer> ic <Plug>(GitGutterTextObjectInnerPending)$/;"	m
install_requires	PMS5003/Old/library/setup.py	/^    install_requires=[]$/;"	v
is_binary_install	DHT22Logger/setup.py	/^def is_binary_install():$/;"	f
j	Session.vim	/^nnoremap j gj$/;"	m
k	Session.vim	/^nnoremap k gk$/;"	m
keywords	PMS5003/Old/library/setup.py	/^    keywords='Raspberry Pi',$/;"	v
last_day	master.py	/^    last_day = time.now().day   # if the last registered day isn't the current day, flags will be reset regardless of RESET_HOUR$/;"	v
libraries	DHT22Logger/setup.py	/^                                    libraries=['rt'],$/;"	v
libraries	DHT22Logger/setup.py	/^                                libraries=['rt'],$/;"	v
license	DHT22Logger/setup.py	/^      license           = 'MIT',$/;"	v
license	PMS5003/Old/library/setup.py	/^    license='MIT',$/;"	v
log	test.py	/^    log = open('sensors.log', 'r+')$/;"	v
log	test.py	/^    log = open('sensors.log', 'w+')$/;"	v
log	test.py	/^log = None$/;"	v
login_open_sheet	DHT22Logger/examples/google_spreadsheet.py	/^def login_open_sheet(oauth_key_file, spreadsheet):$/;"	f
long_description	DHT22Logger/setup.py	/^      long_description  = read('README.md'),$/;"	v
long_description	PMS5003/Old/library/setup.py	/^    long_description=open('README.rst').read() + '\\n' + open('CHANGELOG.txt').read(),$/;"	v
module_methods	DHT22Logger/source/_Beaglebone_Black_Driver.c	/^static PyMethodDef module_methods[] = {$/;"	v	file:
module_methods	DHT22Logger/source/_Raspberry_Pi_2_Driver.c	/^static PyMethodDef module_methods[] = {$/;"	v	file:
module_methods	DHT22Logger/source/_Raspberry_Pi_Driver.c	/^static PyMethodDef module_methods[] = {$/;"	v	file:
module_methods	DHT22Logger/source/_Test_Driver.c	/^static PyMethodDef module_methods[] = {$/;"	v	file:
mysql_info	DHT22Logger/examples/AdafruitDHT.py	/^    mysql_info = {$/;"	v
mysql_info	DHT22Logger/examples/dbtest.py	/^mysql_info = {$/;"	v
mysql_info	PMS5003/Old/examples/pm25pms5003.py	/^    mysql_info = {$/;"	v
name	PMS5003/Old/library/setup.py	/^    name='pms5003',$/;"	v
name	master.py	/^    name  = '.\/DHT22Logger\/examples\/AdafruitDHT_avg.py',$/;"	v
name	master.py	/^    name  = '.\/PMS5003\/Old\/examples\/pm25pms5003_avg.py',$/;"	v
number	DHT22Logger/source/Beaglebone_Black/bbb_mmio.h	/^  int number;$/;"	m	struct:__anon1
p1	PMS5003/Old/examples/pm25pms5003_avg.py	/^            p1  = data.pm_ug_per_m3(1)$/;"	v
p10	PMS5003/Old/examples/pm25pms5003_avg.py	/^            p10 = data.pm_ug_per_m3(10)$/;"	v
p25	PMS5003/Old/examples/pm25pms5003_avg.py	/^            p25 = data.pm_ug_per_m3(2.5)$/;"	v
packages	DHT22Logger/setup.py	/^      packages          = find_packages(),$/;"	v
packages	PMS5003/Old/library/setup.py	/^    packages=['pms5003'],$/;"	v
passwd	DHT22Logger/examples/AdafruitDHT.py	/^     passwd = mysql_info['passwd'], # your password$/;"	v
passwd	DHT22Logger/examples/dbtest.py	/^     passwd = mysql_info['passwd'], # your password$/;"	v
passwd	PMS5003/Old/examples/pm25pms5003.py	/^     passwd = mysql_info['passwd'], # your password$/;"	v
pi2_dht_module	DHT22Logger/source/_Raspberry_Pi_2_Driver.c	/^static struct PyModuleDef pi2_dht_module = {$/;"	v	typeref:struct:PyModuleDef	file:
pi_2_dht_read	DHT22Logger/source/Raspberry_Pi_2/pi_2_dht_read.c	/^int pi_2_dht_read(int type, int pin, float* humidity, float* temperature) {$/;"	f
pi_2_mmio_gpio	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.c	/^volatile uint32_t* pi_2_mmio_gpio = NULL;$/;"	v
pi_2_mmio_init	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.c	/^int pi_2_mmio_init(void) {$/;"	f
pi_2_mmio_input	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.h	/^static inline uint32_t pi_2_mmio_input(const int gpio_number) {$/;"	f
pi_2_mmio_set_high	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.h	/^static inline void pi_2_mmio_set_high(const int gpio_number) {$/;"	f
pi_2_mmio_set_input	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.h	/^static inline void pi_2_mmio_set_input(const int gpio_number) {$/;"	f
pi_2_mmio_set_low	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.h	/^static inline void pi_2_mmio_set_low(const int gpio_number) {$/;"	f
pi_2_mmio_set_output	DHT22Logger/source/Raspberry_Pi_2/pi_2_mmio.h	/^static inline void pi_2_mmio_set_output(const int gpio_number) {$/;"	f
pi_dht_module	DHT22Logger/source/_Raspberry_Pi_Driver.c	/^static struct PyModuleDef pi_dht_module = {$/;"	v	typeref:struct:PyModuleDef	file:
pi_dht_read	DHT22Logger/source/Raspberry_Pi/pi_dht_read.c	/^int pi_dht_read(int type, int pin, float* humidity, float* temperature) {$/;"	f
pi_mmio_gpio	DHT22Logger/source/Raspberry_Pi/pi_mmio.c	/^volatile uint32_t* pi_mmio_gpio = NULL;$/;"	v
pi_mmio_init	DHT22Logger/source/Raspberry_Pi/pi_mmio.c	/^int pi_mmio_init(void) {$/;"	f
pi_mmio_input	DHT22Logger/source/Raspberry_Pi/pi_mmio.h	/^static inline uint32_t pi_mmio_input(const int gpio_number) {$/;"	f
pi_mmio_set_high	DHT22Logger/source/Raspberry_Pi/pi_mmio.h	/^static inline void pi_mmio_set_high(const int gpio_number) {$/;"	f
pi_mmio_set_input	DHT22Logger/source/Raspberry_Pi/pi_mmio.h	/^static inline void pi_mmio_set_input(const int gpio_number) {$/;"	f
pi_mmio_set_low	DHT22Logger/source/Raspberry_Pi/pi_mmio.h	/^static inline void pi_mmio_set_low(const int gpio_number) {$/;"	f
pi_mmio_set_output	DHT22Logger/source/Raspberry_Pi/pi_mmio.h	/^static inline void pi_mmio_set_output(const int gpio_number) {$/;"	f
pi_revision	DHT22Logger/Adafruit_DHT/platform_detect.py	/^def pi_revision():$/;"	f
pi_revision	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/platform_detect.py	/^def pi_revision():$/;"	f
pi_version	DHT22Logger/Adafruit_DHT/platform_detect.py	/^def pi_version():$/;"	f
pi_version	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/platform_detect.py	/^def pi_version():$/;"	f
pi_version	DHT22Logger/setup.py	/^        pi_version = platform_detect.pi_version()$/;"	v
pi_version	DHT22Logger/setup.py	/^    pi_version = 2$/;"	v
pi_version	DHT22Logger/setup.py	/^pi_version = None$/;"	v
pin	DHT22Logger/examples/AdafruitDHT.py	/^    pin     = sys.argv[2]$/;"	v
pin	DHT22Logger/examples/AdafruitDHT_avg.py	/^    pin     = sys.argv[2]$/;"	v
pin	DHT22Logger/examples/sensortest.py	/^pin = 4$/;"	v
pin_to_gpio	DHT22Logger/Adafruit_DHT/Beaglebone_Black.py	/^pin_to_gpio = {$/;"	v
pin_to_gpio	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/Beaglebone_Black.py	/^pin_to_gpio = {$/;"	v
platform	DHT22Logger/setup.py	/^    platform = 'TEST'$/;"	v
platform	DHT22Logger/setup.py	/^    platform = platform_detect.BEAGLEBONE_BLACK$/;"	v
platform	DHT22Logger/setup.py	/^    platform = platform_detect.RASPBERRY_PI$/;"	v
platform	DHT22Logger/setup.py	/^    platform = platform_detect.platform_detect()$/;"	v
platform	DHT22Logger/setup.py	/^platform = platform_detect.UNKNOWN$/;"	v
platform_detect	DHT22Logger/Adafruit_DHT/platform_detect.py	/^def platform_detect():$/;"	f
platform_detect	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/platform_detect.py	/^def platform_detect():$/;"	f
pm1	PMS5003/Old/examples/pm25pms5003.py	/^    pm1  = data.pm_ug_per_m3(1)$/;"	v
pm1	PMS5003/Old/examples/pm25pms5003_avg.py	/^pm1  = 0.0$/;"	v
pm10	PMS5003/Old/examples/pm25pms5003.py	/^    pm10 = data.pm_ug_per_m3(10)$/;"	v
pm10	PMS5003/Old/examples/pm25pms5003_avg.py	/^pm10 = 0.0$/;"	v
pm25	PMS5003/Old/examples/pm25pms5003.py	/^    pm25 = data.pm_ug_per_m3(2.5)$/;"	v
pm25	PMS5003/Old/examples/pm25pms5003_avg.py	/^pm25 = 0.0$/;"	v
pm_per_1l_air	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^    def pm_per_1l_air(self, size):$/;"	m	class:PMS5003Data
pm_per_1l_air	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^    def pm_per_1l_air(self, size):$/;"	m	class:PMS5003Data
pm_per_1l_air	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^    def pm_per_1l_air(self, size):$/;"	m	class:PMS5003Data
pm_per_1l_air	PMS5003/Old/library/pms5003/__init__.py	/^    def pm_per_1l_air(self, size):$/;"	m	class:PMS5003Data
pm_ug_per_m3	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^    def pm_ug_per_m3(self, size, atmospheric_environment=False):$/;"	m	class:PMS5003Data
pm_ug_per_m3	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^    def pm_ug_per_m3(self, size, atmospheric_environment=False):$/;"	m	class:PMS5003Data
pm_ug_per_m3	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^    def pm_ug_per_m3(self, size, atmospheric_environment=False):$/;"	m	class:PMS5003Data
pm_ug_per_m3	PMS5003/Old/library/pms5003/__init__.py	/^    def pm_ug_per_m3(self, size, atmospheric_environment=False):$/;"	m	class:PMS5003Data
pms5003	PMS5003/Old/examples/all.py	/^pms5003 = PMS5003()$/;"	v
pms5003	PMS5003/Old/examples/pm25pms5003.py	/^pms5003 = PMS5003()$/;"	v
pms5003	PMS5003/Old/examples/pm25pms5003_avg.py	/^pms5003 = PMS5003()$/;"	v
pms5003	PMS5003/Old/examples/specific.py	/^pms5003 = PMS5003()$/;"	v
project_urls	PMS5003/Old/library/setup.py	/^    project_urls={'GitHub': 'https:\/\/www.github.com\/pimoroni\/pms5003-python'},$/;"	v
q	DHT22Logger/examples/dbtest.py	/^q = input('Insert a default reading into \\'{}\\' table? (y\/n)').format(mysql_info['table'])$/;"	v
read	DHT22Logger/Adafruit_DHT/Beaglebone_Black.py	/^def read(sensor, pin):$/;"	f
read	DHT22Logger/Adafruit_DHT/Raspberry_Pi.py	/^def read(sensor, pin):$/;"	f
read	DHT22Logger/Adafruit_DHT/Raspberry_Pi_2.py	/^def read(sensor, pin):$/;"	f
read	DHT22Logger/Adafruit_DHT/Test.py	/^def read(sensor, pin):$/;"	f
read	DHT22Logger/Adafruit_DHT/common.py	/^def read(sensor, pin, platform=None):$/;"	f
read	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/Beaglebone_Black.py	/^def read(sensor, pin):$/;"	f
read	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/Raspberry_Pi.py	/^def read(sensor, pin):$/;"	f
read	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/Raspberry_Pi_2.py	/^def read(sensor, pin):$/;"	f
read	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/Test.py	/^def read(sensor, pin):$/;"	f
read	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^def read(sensor, pin, platform=None):$/;"	f
read	DHT22Logger/setup.py	/^def read(fname):$/;"	f
read	PMS5003/Old/library/build/lib.linux-armv7l-2.7/pms5003/__init__.py	/^    def read(self):$/;"	m	class:PMS5003
read	PMS5003/Old/library/build/lib.linux-x86_64-2.7/pms5003/__init__.py	/^    def read(self):$/;"	m	class:PMS5003
read	PMS5003/Old/library/build/lib/pms5003/__init__.py	/^    def read(self):$/;"	m	class:PMS5003
read	PMS5003/Old/library/pms5003/__init__.py	/^    def read(self):$/;"	m	class:PMS5003
read	PMS5003/Old/library/tests/test_setup.py	/^    def read(self, length):$/;"	m	class:MockSerial
read	PMS5003/Old/library/tests/test_setup.py	/^    def read(self, length):$/;"	m	class:MockSerialFail
read_count	DHT22Logger/examples/AdafruitDHT_avg.py	/^read_count  = 10$/;"	v
read_count	PMS5003/Old/examples/pm25pms5003_avg.py	/^read_count  = 10$/;"	v
read_retry	DHT22Logger/Adafruit_DHT/common.py	/^def read_retry(sensor, pin, retries=15, delay_seconds=2, platform=None):$/;"	f
read_retry	DHT22Logger/build/lib.linux-armv7l-2.7/Adafruit_DHT/common.py	/^def read_retry(sensor, pin, retries=15, delay_seconds=2, platform=None):$/;"	f
reset_flags	master.py	/^    def reset_flags():$/;"	f
retry_count	DHT22Logger/examples/AdafruitDHT_avg.py	/^    retry_count = 0$/;"	v
retry_count	PMS5003/Old/examples/pm25pms5003_avg.py	/^    retry_count = 0$/;"	v
run_full	master.py	/^def run_full(script):$/;"	f
s	test.py	/^    s = log.readline()[:-1]$/;"	v
s:cpo_save	Session.vim	/^let s:cpo_save=&cpo$/;"	v
s:l	Session.vim	/^let s:l = 1 - ((0 * winheight(0) + 26) \/ 52)$/;"	v
s:so_save	Session.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:sx	Session.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:wipebuf	Session.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
sensor	DHT22Logger/examples/AdafruitDHT.py	/^    sensor  = sensor_args[sys.argv[1]]$/;"	v
sensor	DHT22Logger/examples/AdafruitDHT_avg.py	/^    sensor  = sensor_args[sys.argv[1]]$/;"	v
sensor	DHT22Logger/examples/sensortest.py	/^sensor = 22$/;"	v
sensor_args	DHT22Logger/examples/AdafruitDHT.py	/^sensor_args = { '11': Adafruit_DHT.DHT11,$/;"	v
sensor_args	DHT22Logger/examples/AdafruitDHT_avg.py	/^sensor_args = { '11': Adafruit_DHT.DHT11,$/;"	v
sensors	master.py	/^sensors = [$/;"	v
set_default_priority	DHT22Logger/source/common_dht_read.c	/^void set_default_priority(void) {$/;"	f
set_max_priority	DHT22Logger/source/common_dht_read.c	/^void set_max_priority(void) {$/;"	f
shortname	scripthandler.py	/^    def shortname(self):$/;"	m	class:Script
sleep_milliseconds	DHT22Logger/source/common_dht_read.c	/^void sleep_milliseconds(uint32_t millis) {$/;"	f
sql	DHT22Logger/examples/AdafruitDHT.py	/^sql = "INSERT INTO {} (date, time, temperature, humidity) VALUES (%s, %s, %s, %s);".format(mysql_info['table'])$/;"	v
sql	DHT22Logger/examples/dbtest.py	/^    sql = "INSERT INTO {} (date, time, temperature, humidity) VALUES (%s, %s, %s, %s);".format(mysql_info['table'])$/;"	v
sql	PMS5003/Old/examples/pm25pms5003.py	/^sql = "INSERT INTO {} (date, time, pm1, pm25, pm10) VALUES (%s, %s, %s, %s, %s);".format(mysql_info['table'])$/;"	v
temperature	DHT22Logger/examples/AdafruitDHT.py	/^temperature = 100;$/;"	v
temperature	DHT22Logger/examples/AdafruitDHT_avg.py	/^temperature = 0.0$/;"	v
temperature	DHT22Logger/examples/dbtest.py	/^    temperature = 20.0$/;"	v
temperature	DHT22Logger/examples/sensortest.py	/^temperature = 100;$/;"	v
test_dht_module	DHT22Logger/source/_Test_Driver.c	/^static struct PyModuleDef test_dht_module = {$/;"	v	typeref:struct:PyModuleDef	file:
test_dht_read	DHT22Logger/source/Test/test_dht_read.c	/^int test_dht_read(int type, int pin, float* humidity, float* temperature) {$/;"	f
test_read	PMS5003/Old/library/tests/test_setup.py	/^def test_read():$/;"	f
test_read_fail	PMS5003/Old/library/tests/test_setup.py	/^def test_read_fail():$/;"	f
test_setup	PMS5003/Old/library/tests/test_setup.py	/^def test_setup():$/;"	f
time_str	DHT22Logger/examples/AdafruitDHT.py	/^time_str = '{}:{}:{}'.format(str(date.hour), str(date.minute), str(date.second))$/;"	v
time_str	DHT22Logger/examples/AdafruitDHT_avg.py	/^    time_str = '{}:{}:{}'.format(str(date2.hour), str(date2.minute), str(date2.second))$/;"	v
time_str	DHT22Logger/examples/dbtest.py	/^    time_str = '{}:{}:{}'.format(str(date.hour), str(date.minute), str(date.second))$/;"	v
time_str	DHT22Logger/examples/sensortest.py	/^time_str = '{}:{}:{}'.format(str(date.hour), str(date.minute), str(date.second))$/;"	v
time_str	PMS5003/Old/examples/pm25pms5003.py	/^time_str = '{}:{}:{}'.format(str(date.hour), str(date.minute), str(date.second))$/;"	v
time_str	PMS5003/Old/examples/pm25pms5003_avg.py	/^    time_str = '{}:{}:{}'.format(str(date2.hour), str(date2.minute), str(date2.second))$/;"	v
trunc_log	master.py	/^def trunc_log(fname):$/;"	f
url	DHT22Logger/setup.py	/^      url               = 'https:\/\/github.com\/adafruit\/Adafruit_Python_DHT\/',$/;"	v
url	PMS5003/Old/library/setup.py	/^    url='http:\/\/www.pimoroni.com',$/;"	v
user	DHT22Logger/examples/AdafruitDHT.py	/^     user   = mysql_info['user'],   # your username$/;"	v
user	DHT22Logger/examples/dbtest.py	/^     user   = mysql_info['user'],   # your username$/;"	v
user	PMS5003/Old/examples/pm25pms5003.py	/^     user   = mysql_info['user'],   # your username$/;"	v
val	DHT22Logger/examples/AdafruitDHT.py	/^val = (date_str, time_str, temperature, humidity)$/;"	v
val	DHT22Logger/examples/dbtest.py	/^    val = (date_str, time_str, temperature, humidity)$/;"	v
val	PMS5003/Old/examples/pm25pms5003.py	/^val = (date_str, time_str, pm1, pm25, pm10)$/;"	v
version	DHT22Logger/setup.py	/^      version           = '1.4.0',$/;"	v
version	PMS5003/Old/library/setup.py	/^    version='0.0.1',$/;"	v
worksheet	DHT22Logger/examples/google_spreadsheet.py	/^        worksheet = None$/;"	v
worksheet	DHT22Logger/examples/google_spreadsheet.py	/^        worksheet = login_open_sheet(GDOCS_OAUTH_JSON, GDOCS_SPREADSHEET_NAME)$/;"	v
worksheet	DHT22Logger/examples/google_spreadsheet.py	/^worksheet = None$/;"	v
yS	Session.vim	/^nmap yS <Plug>YSurround$/;"	m
ySS	Session.vim	/^nmap ySS <Plug>YSsurround$/;"	m
ySs	Session.vim	/^nmap ySs <Plug>YSsurround$/;"	m
ys	Session.vim	/^nmap ys <Plug>Ysurround$/;"	m
yss	Session.vim	/^nmap yss <Plug>Yssurround$/;"	m
zt	Session.vim	/^normal! zt$/;"	m
{	Session.vim	/^inoremap <buffer> <silent> { =AutoPairsInsert('{')$/;"	m
}	Session.vim	/^inoremap <buffer> <silent> } =AutoPairsInsert('}')$/;"	m
Â¢	Session.vim	/^inoremap <buffer> <silent> Â¢ =AutoPairsMoveCharacter('"')$/;"	m
Â§	Session.vim	/^inoremap <buffer> <silent> Â§ =AutoPairsMoveCharacter('''')$/;"	m
Â¨	Session.vim	/^inoremap <buffer> <silent> Â¨ =AutoPairsMoveCharacter('(')$/;"	m
Â©	Session.vim	/^inoremap <buffer> <silent> Â© =AutoPairsMoveCharacter(')')$/;"	m
Ã	Session.vim	/^inoremap <buffer> <silent> Ã =AutoPairsMoveCharacter('[')$/;"	m
Ã	Session.vim	/^inoremap <buffer> <silent> Ã =AutoPairsMoveCharacter(']')$/;"	m
Ã¢	Session.vim	/^inoremap <buffer> <silent> Ã¢ =AutoPairsBackInsert()$/;"	m
Ã¥	Session.vim	/^inoremap <buffer> <silent> Ã¥ =AutoPairsFastWrap()$/;"	m
Ã®	Session.vim	/^inoremap <buffer> <silent> Ã® :call AutoPairsJump()$/;"	m
Ã®	Session.vim	/^nnoremap <silent> Ã® :call multiple_cursors#select_all("n", 1)$/;"	m
Ã®	Session.vim	/^noremap <buffer> <silent> Ã® :call AutoPairsJump()$/;"	m
Ã»	Session.vim	/^inoremap <buffer> <silent> Ã» =AutoPairsMoveCharacter('{')$/;"	m
Ã½	Session.vim	/^inoremap <buffer> <silent> Ã½ =AutoPairsMoveCharacter('}')$/;"	m
